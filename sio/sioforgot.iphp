<?php
mb_internal_encoding('UTF-8');

/**
 * This requires 
 */
class SioForgot {

	use Form;
	protected static function sig() {
		return "sioforgot_";
	}

/**
 * '__construct'
 */
	function __construct($key=NULL,$v=NULL) {
		$this->iniForm($key,$v);
		$this->key=$key;
		$this->table="user";
		$this->setfld('username');
		$this->setfld('email');
	}

/**
 * 'validate'
 * fn fulfilling abstract requirement of trait 'Form'.
 * validate all fields in this->fields.
 * errors are placed into the this->view.
 */
	protected function validate() {
		$this->valEmail('email');
	}

/**
 * 'commit'
 * fn OVERLOADING trait 'Form'.
 */
	protected function commit() {
		$em=$this->fields['email'][0];
		$qry="select username,sha2(concat(ifnull(username,id),'-',ifnull(password,id),'-',ifnull(email,id),'-',ifnull(ts,id)),256) as munge from " . $this->table . " where active='on' and email='" . $em . "'";
		if ($rx = Settings::$sql->query($qry)) {
			require_once("/websites/shared/lib/PHPMailer/PHPMailerAutoload.php");
			while ($f = $rx->fetch_assoc()) {
				$mail_v=new NView('siosetpwmail_v.ixml');
				$mail = new PHPMailer();
				$mail->isSendmail();
				$mail->CharSet='utf-8';
				$mail->Encoding='base64';
				$mail->setFrom('auto@redsnapper.net', 'Password Reset');
				$mail->addBCC('auto@redsnapper.net', 'Auto'); //bcc			
				$mail->addAddress($em,$f['username']); 				
				$mail->Subject = 'Password Reset';
				$mail->isHTML(true);
				$url=$_SERVER["SCRIPT_URI"];
				if (strpos($url, '?') !== false) {
					$url .= '&amp;siof=' . $f['munge'];
				} else {
					$url .= '?siof=' . $f['munge'];
				}			
				$mail_v->set("//*[@data-xp='un']/child-gap()",$f['username']);
				$mail_v->set("//*[@data-xp='ha']/@href",$url);
				$mail->Body = $mail_v->show(false);
				$mail->AltBody="Please see the html alternative of this email";
				$mail->send();
			}
			$rx->close();
		}
		return true;
	}

/**
 * 'populate'
 * fn fulfilling abstract requirement of trait 'Form'.
 * place this->fields array into view.
 */
	protected function populate() {
		$this->vset('email');
	}
}
