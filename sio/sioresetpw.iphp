<?php
mb_internal_encoding('UTF-8');

class SIOResetPW {
	use Form;
	public static function sig() {
		return "sioresetpw_";
	}
	function __construct($key=NULL,$v=NULL) {
		$this->iniForm($key,$v);
		$this->key=$key; //This will be the siof value passed by url.
		$this->table="user";
		$this->setfld('password');
		$this->setfld('passwordb','','!skip');
	}
	
/**
 * 'validate'
 * fn fulfilling abstract requirement of trait 'Form'.
 * validate all fields in this->fields.
 * errors are placed into the this->view.
 */
	protected function validate() {
		$retval = $this->valid;
		if (isset($this->fields['password'][0]) && isset($this->fields['passwordb'][0])) {
			$pwa=$this->fields['password'][0];
			$pwb=$this->fields['passwordb'][0];
			if ($pwa !== $pwb ) {
				$this->seterr("password","Both passwords must be the same.");
				$retval = false;
			} 
			if (strlen($pwa) < 7) {
				$this->seterr("password","Passwords must be more than 6 characters.");
				$retval = false;
			} 
			if ($pwa === Settings::$usr['RU']) {
				$this->seterr("password","Passwords must be different from your username!");
				$retval = false;
			} 
		}
		$this->valid = $retval;
	}

	protected function commit() {
		$ha=Settings::esc($this->key); //this comes via the url...
		
		$query= "select username from user where sha2(concat(ifnull(username,id),'-',ifnull(password,id),'-',ifnull(email,id),'-',ifnull(ts,id)),256)='".$ha."'";
		if ($rs = Settings::$sql->query($query)) {
			while ($f = $rs->fetch_assoc()) {
				$ph=Settings::esc(hash('sha256',$f['username'].hex2bin('5BE0BDA8E0BDBCE0BDBEE0BC8BE0BDA7E0BDB1E0BDB4E0BDBE5D') . hash('sha256',$this->fields['password'][0])));
				$cond=" and sha2(concat(ifnull(username,id),'-',ifnull(password,id),'-',ifnull(email,id),'-',ifnull(ts,id)),256)='".$ha."'";
				$qry="update " . $this->table . " set password='".$ph."' where active='on' ".$cond ;
				Settings::$sql->query($qry);
			
			}
			$rs->close();
		}
		$this->show = false;
		return true;
	}
	
	protected function populate() {
	}
	
	public static function conforms($hat=NULL) {
		$retval=false;
		$ha=Settings::esc($hat); 
		$query= "select id from user where sha2(concat(ifnull(username,id),'-',ifnull(password,id),'-',ifnull(email,id),'-',ifnull(ts,id)),256)='".$ha."'";
		if ($rs = Settings::$sql->query($query)) {
			if (Settings::rows($rs) == 1) {
				$retval=true;
			}
			$rs->close();
		}
		return $retval;
	}
}

