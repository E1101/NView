<?php
mb_internal_encoding('UTF-8');

/**
 * class 'SioSignOut'
 */
class SioSignOut {
	use Form;
	const SIG = "siosignout_";
	public static function sig() { return static::SIG; }
	private static $v=array( static::SIG=>static::SIG."v.ixml" );
	public static::$field_keys = array(
		static::SIG .'button_signout',
		static::SIG .'button_newemailaddr',
		static::SIG .'button_newpassword'
	);
	public static function initialise() {
		$en = array(
			static::SIG .'button_signout'=>"Sign Out",
			static::SIG .'button_newemailaddr'=>"Change Registered Email Address",
			static::SIG .'button_newpassword'=>"Change Password"
		);
		Dict::set($en,'en');
	}
	
/**
 * '__construct'
 */
	function __construct($key=NULL,$custom_views=array()) {
		static::$v = array_replace(static::$v,$custom_views);
		$this->iniForm($key,@static::$v[static::SIG]);
	    $this->key=$key;
	    $this->table="user";
	}

/**
 * 'func'
 * fn overloading of trait 'Form'.
 */
	protected function func() {
		switch ($this->fields['_fn'][0]) {
			case 'email': {
				$sf=new SIOSetEmail(NULL,static::$v);
				return $sf->form();			
			} break;
			case 'reset': {
				$sf=new SIOSetPW(NULL,static::$v);
				return $sf->form();			
			} break;
		}
	}

/**
 * 'validate'
 * fn fulfilling abstract requirement of trait 'Form'.
 */
	protected function validate() {
		$this->valid = true;
	}

/**
 * 'commit'
 * fn OVERLOADING trait 'Form'.
 */
	protected function commit() {
		Settings::$usr['ID']=NULL;
		Settings::usr(false);
		Session::del();
		return true;
	}

/**
 * 'populate'
 * fn fulfilling abstract requirement of trait 'Form'.
 */
	protected function populate() {
		$this->tset(static::$field_keys);
	}

}
